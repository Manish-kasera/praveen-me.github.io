{"version":3,"sources":["webpack:///./src/components/home/HeroSection.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/social-links.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/layoutWrapper.js","webpack:///./src/components/seo.js","webpack:///./src/utils/helper-functions.js","webpack:///./src/components/pagination.js","webpack:///./src/components/home/PostBlock.js","webpack:///./src/components/PostList.js"],"names":["HeroSection","site","_3682062871","data","react_default","a","createElement","className","siteMetadata","title","href","gatsby_browser_entry","to","__webpack_require__","d","__webpack_exports__","query","IndexPage","_ref","layoutWrapper","seo","keywords","home_HeroSection","PostList","posts","allMarkdownRemark","pagination","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","propTypes","shape","socialLinks","linkType","username","socialLink","Header","id","map","link","i","key","rel","target","Footer","aria-label","role","alt","Layout","props","_this","_React$PureComponent","call","this","state","isHome","componentDidMount","setState","match","render","children","header","footer","PureComponent","node","LayoutWrapper","react__WEBPACK_IMPORTED_MODULE_1___default","_reach_router__WEBPACK_IMPORTED_MODULE_2__","locationProps","_layout__WEBPACK_IMPORTED_MODULE_3__","Object","assign","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","minutes","words","Math","ceil","Pagination","_public_static_d_1310501729_json__WEBPACK_IMPORTED_MODULE_0__","totalPages","edges","pages","push","page","gatsby__WEBPACK_IMPORTED_MODULE_2__","PostBlock","slug","date","excerpt","large","time","Date","toDateString","firstPost","leftPosts","slice","home_PostBlock","fields","frontmatter","wordCount","post","_post$node"],"mappings":"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","file":"component---src-pages-index-js-9110e31a5fdc1729d118.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql, useStaticQuery } from \"gatsby\";\n\nconst HeroSection = ( ) => {\n  const { site } = useStaticQuery(\n    graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n    `\n  );\n  \n  return(\n    <div className=\"main__sec\">\n      <h3 className=\"main__author-subhead center\">Hi there! I'm</h3>\n      <h1 className=\"main__author-head center\">{ site.siteMetadata.title }</h1>\n      <p className=\"main__author-experct\">\n      I am a life long learner and currently working as a React Developer at <a href=\"https://rtcamp.com\">rtCamp</a> . Most of the time I totally evolved in JavaScript stuff like React, Redux, Node, Express, etc.\n      <br/><Link to=\"/about\" className=\"main__content-link\">read more...</Link></p>\n    </div>\n  )\n};\n\nexport default HeroSection;","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport SEO from \"../components/seo\";\n\n// Adding Styles\nimport './../scss/app.scss'\nimport LayoutWrapper from \"../components/layoutWrapper\";\nimport HeroSection from \"../components/home/HeroSection\";\nimport Pagination from \"../components/pagination\";\nimport PostList from \"../components/PostList\";\n\nconst IndexPage = ({ data }) => {\n\n  return (\n    <LayoutWrapper>\n      <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`, `portfolio`, `personal website`, `blog`]} />\n      <div className=\"main__content\">\n        {/* Hero Section */}\n        <HeroSection />\n\n        {/* Post List Section */}\n        <PostList posts={ data.allMarkdownRemark }/>\n\n        {/* Pagination */}\n        <Pagination />\n      </div>\n    </LayoutWrapper>\n  )\n}\n\nexport const query = graphql`\nquery {\n  allMarkdownRemark(\n    sort : { order: ASC, fields: [frontmatter___date] },\n    limit: 5\n    ) {\n    edges {\n      node {\n        fields {\n          slug\n        }\n        html\n        wordCount {\n          words\n        }\n        excerpt(pruneLength: 150)\n        frontmatter{\n          title\n          date\n        }\n      }\n    }\n  }\n}\n`\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","const socialLinks = [\n  {\n    linkType: 'twitter',\n    username: 'am_pra_veen',\n    socialLink: 'https://twitter.com/', \n  },\n  {\n    linkType: 'github',\n    username: 'praveen-me',\n    socialLink: 'https://github.com/'\n  },\n  {\n    linkType: 'linkedin',\n    username: 'praveen-me',\n    socialLink: 'https://linkedin.com/in/'\n  },\n];\n\nexport default socialLinks;","import { Link } from \"gatsby\";\nimport React from \"react\";\n\nimport socialLinks from \"../utils/social-links\";\n\nconst Header = () => (\n  <header className=\"header\" id=\"top\">\n    <a href=\"#top\" className=\"header__topbar\">\"</a>\n    <div className=\"header__content-block\">\n      <div className=\"header__logo-sec\">\n        <Link to=\"/\" className=\"header__logo\">JS</Link>\n      </div>\n      <div className=\"header__social-pack\">\n        {\n          socialLinks.map( ( link, i ) => (\n            <div className=\"header__social-sec\" key={ link.linkType }>\n              <span> { link.linkType } </span> \n              <a href={link.socialLink + link.username } rel=\"noopener noreferrer\" target=\"_blank\"> @{ link.username }</a>\n            </div>\n          ) )\n        }        \n      </div>\n    </div>\n  </header>\n);\n\nexport default Header\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__text center\">\n      Made with <span aria-label=\"Heart Image\" role=\"img\" alt=\"image of heart\">❤️</span> JavaScript and SASS with React and Gatsby <span aria-label=\"Computer Image\" role=\"img\" alt=\"image of computer\">💻</span>\n      </p> \n    </footer>\n  )\n};\n\nexport default Footer;","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\n\n// import './../scss/app.scss';\n\nclass Layout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHome: false\n    }\n  }\n  \n  componentDidMount() {\n    this.setState({\n      isHome: this.props.location.pathname === '/' || this.props.location.pathname.match(/page/, 'i') ? true : false\n    })  \n  }\n\n  render() {\n    const { children} = this.props;\n    const { isHome } = this.state;\n    return (\n      <div className={ isHome ? 'home' : 'show-content' }>\n        <Header/>\n        <main className=\"wrapper main\">{children}</main>\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react';\nimport {  Location } from '@reach/router';\nimport Layout from './layout';\n\nconst LayoutWrapper = ( props ) => {\n  return <Location>\n    {\n      (locationProps) => \n       <Layout {...locationProps} { ...props }>{ props.children }</Layout>\n    }\n  </Location>\n}\n\nexport default LayoutWrapper;","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n// import icon from '././../images/icon.png';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","export const minutes = (words) => Math.ceil( words / 200 );\n","import React from 'react';\nimport { Link, useStaticQuery } from 'gatsby';\n\nconst Pagination = () => {\n  const { allMarkdownRemark } = useStaticQuery(\n    graphql`\n    query {\n      allMarkdownRemark{\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n            }\n          }\n        }\n      }\n    }\n    `\n  );\n\n  const totalPages = Math.ceil( allMarkdownRemark.edges.length / 5 );\n  \n  let pages = [];\n\n  for ( let i = 1; i <= totalPages; i++ ) {\n    pages.push(i);\n  }\n\n  return (\n    <div className=\"pagination center\">\n    {\n      pages.map(( page, i ) => (\n        <Link to={ page === 1 ? '/' : `/page/${ i + 1 }` } className=\"pagination__link\" key={ page }>{ i + 1 }</Link>\n      ) )\n    }\n    </div>\n  )\n  \n};\n\nexport default Pagination;","import React from 'react';\nimport { Link }  from 'gatsby';\nimport { minutes } from '../../utils/helper-functions';\n\n\nconst PostBlock = ( { slug, date, words, title, excerpt, large } ) => {\n  let time = minutes(words);\n\n  return(\n    <Link to={ slug } className={`posts__single ${ large ? 'large': '' }`}>\n      <p className=\"posts__date-and-time\">{ new Date(date).toDateString() } - { time } { time > 1 ? 'mins' : 'min' } read</p>\n      <h2 className=\"posts__title\">{ title }</h2>\n      <p className=\"posts__excerpt\">{ excerpt }</p>\n    </Link>\n  )\n};\n\nexport default PostBlock;","import React from 'react';\nimport PostBlock from './home/PostBlock';\n\nconst PostList = ({ posts }) => {\n  const firstPost = posts.edges[0].node;\n  const leftPosts = posts.edges.slice(1);\n\n  return (\n    <div className=\"posts__wrapper\">\n      <PostBlock \n      slug={ firstPost.fields.slug } \n      date={ firstPost.frontmatter.date }\n      words={ firstPost.wordCount.words }\n      title={ firstPost.frontmatter.title }\n      excerpt={ firstPost.excerpt }\n      key={ firstPost.fields.slug }\n      large\n      />\n      <div className=\"posts\">\n        {\n          leftPosts.map( post => {\n\n            const { fields, wordCount, excerpt, frontmatter } = post.node;\n            \n            return  <PostBlock \n            slug={ fields.slug } \n            date={ frontmatter.date }\n            words={ wordCount.words }\n            title={ frontmatter.title }\n            excerpt={ excerpt }\n            key={ fields.slug }\n            />\n          } )\n        }\n      </div>\n    </div>\n  )\n};\n\nexport default PostList;"],"sourceRoot":""}